{
  "hash": "f090f6ad13dd65430926bd24e17df3aa",
  "result": {
    "markdown": "---\ntitle: \"Reading datasets: hotel_bookings.csv\"\nauthor: \"Susmita Madineni\"\ndesription: \"Data wrangling: using group() and summarise() for hotel_bookings dataset\"\ndate: \"02/27/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_2\n  - Susmita Madineni\n  - hotel_bookings\n  - readr\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Read in the Data\n\nRead in the following data set, available in the `posts/_data` folder:\n- hotel_bookings.csv ⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Reading hotel_bookings.csv dataset\n\nlibrary(readr)\nhotel_bookings_data <- read_csv(\"_data/hotel_bookings.csv\")\nview(hotel_bookings_data)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Preview the first few rows of the dataset\nhead(hotel_bookings_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 32\n  hotel   is_ca…¹ lead_…² arriv…³ arriv…⁴ arriv…⁵ arriv…⁶ stays…⁷ stays…⁸ adults\n  <chr>     <dbl>   <dbl>   <dbl> <chr>     <dbl>   <dbl>   <dbl>   <dbl>  <dbl>\n1 Resort…       0     342    2015 July         27       1       0       0      2\n2 Resort…       0     737    2015 July         27       1       0       0      2\n3 Resort…       0       7    2015 July         27       1       0       1      1\n4 Resort…       0      13    2015 July         27       1       0       1      1\n5 Resort…       0      14    2015 July         27       1       0       2      2\n6 Resort…       0      14    2015 July         27       1       0       2      2\n# … with 22 more variables: children <dbl>, babies <dbl>, meal <chr>,\n#   country <chr>, market_segment <chr>, distribution_channel <chr>,\n#   is_repeated_guest <dbl>, previous_cancellations <dbl>,\n#   previous_bookings_not_canceled <dbl>, reserved_room_type <chr>,\n#   assigned_room_type <chr>, booking_changes <dbl>, deposit_type <chr>,\n#   agent <chr>, company <chr>, days_in_waiting_list <dbl>,\n#   customer_type <chr>, adr <dbl>, required_car_parking_spaces <dbl>, …\n```\n:::\n\n```{.r .cell-code}\n# Understanding the dimensions of the dataset \ndim(hotel_bookings_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 119390     32\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Identifying the column names of the dataset \ncolnames(hotel_bookings_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"hotel\"                          \"is_canceled\"                   \n [3] \"lead_time\"                      \"arrival_date_year\"             \n [5] \"arrival_date_month\"             \"arrival_date_week_number\"      \n [7] \"arrival_date_day_of_month\"      \"stays_in_weekend_nights\"       \n [9] \"stays_in_week_nights\"           \"adults\"                        \n[11] \"children\"                       \"babies\"                        \n[13] \"meal\"                           \"country\"                       \n[15] \"market_segment\"                 \"distribution_channel\"          \n[17] \"is_repeated_guest\"              \"previous_cancellations\"        \n[19] \"previous_bookings_not_canceled\" \"reserved_room_type\"            \n[21] \"assigned_room_type\"             \"booking_changes\"               \n[23] \"deposit_type\"                   \"agent\"                         \n[25] \"company\"                        \"days_in_waiting_list\"          \n[27] \"customer_type\"                  \"adr\"                           \n[29] \"required_car_parking_spaces\"    \"total_of_special_requests\"     \n[31] \"reservation_status\"             \"reservation_status_date\"       \n```\n:::\n\n```{.r .cell-code}\n# Changing column name to make it more readable\ncolnames(hotel_bookings_data)[28] <- \"average_daily_rate\"\n\n# Identifying the data types of the columns\ntable(sapply(hotel_bookings_data, function(x) typeof(x)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\ncharacter    double \n       13        19 \n```\n:::\n\n```{.r .cell-code}\nsapply(hotel_bookings_data, function(x) n_distinct(x))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                         hotel                    is_canceled \n                             2                              2 \n                     lead_time              arrival_date_year \n                           479                              3 \n            arrival_date_month       arrival_date_week_number \n                            12                             53 \n     arrival_date_day_of_month        stays_in_weekend_nights \n                            31                             17 \n          stays_in_week_nights                         adults \n                            35                             14 \n                      children                         babies \n                             6                              5 \n                          meal                        country \n                             5                            178 \n                market_segment           distribution_channel \n                             8                              5 \n             is_repeated_guest         previous_cancellations \n                             2                             15 \nprevious_bookings_not_canceled             reserved_room_type \n                            73                             10 \n            assigned_room_type                booking_changes \n                            12                             21 \n                  deposit_type                          agent \n                             3                            334 \n                       company           days_in_waiting_list \n                           353                            128 \n                 customer_type             average_daily_rate \n                             4                           8879 \n   required_car_parking_spaces      total_of_special_requests \n                             5                              6 \n            reservation_status        reservation_status_date \n                             3                            926 \n```\n:::\n\n```{.r .cell-code}\n# Identifying unique values for columns - country, distribution_channel\nunique(hotel_bookings_data$hotel)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Resort Hotel\" \"City Hotel\"  \n```\n:::\n\n```{.r .cell-code}\nunique(hotel_bookings_data$country)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] \"PRT\"  \"GBR\"  \"USA\"  \"ESP\"  \"IRL\"  \"FRA\"  \"NULL\" \"ROU\"  \"NOR\"  \"OMN\" \n [11] \"ARG\"  \"POL\"  \"DEU\"  \"BEL\"  \"CHE\"  \"CN\"   \"GRC\"  \"ITA\"  \"NLD\"  \"DNK\" \n [21] \"RUS\"  \"SWE\"  \"AUS\"  \"EST\"  \"CZE\"  \"BRA\"  \"FIN\"  \"MOZ\"  \"BWA\"  \"LUX\" \n [31] \"SVN\"  \"ALB\"  \"IND\"  \"CHN\"  \"MEX\"  \"MAR\"  \"UKR\"  \"SMR\"  \"LVA\"  \"PRI\" \n [41] \"SRB\"  \"CHL\"  \"AUT\"  \"BLR\"  \"LTU\"  \"TUR\"  \"ZAF\"  \"AGO\"  \"ISR\"  \"CYM\" \n [51] \"ZMB\"  \"CPV\"  \"ZWE\"  \"DZA\"  \"KOR\"  \"CRI\"  \"HUN\"  \"ARE\"  \"TUN\"  \"JAM\" \n [61] \"HRV\"  \"HKG\"  \"IRN\"  \"GEO\"  \"AND\"  \"GIB\"  \"URY\"  \"JEY\"  \"CAF\"  \"CYP\" \n [71] \"COL\"  \"GGY\"  \"KWT\"  \"NGA\"  \"MDV\"  \"VEN\"  \"SVK\"  \"FJI\"  \"KAZ\"  \"PAK\" \n [81] \"IDN\"  \"LBN\"  \"PHL\"  \"SEN\"  \"SYC\"  \"AZE\"  \"BHR\"  \"NZL\"  \"THA\"  \"DOM\" \n [91] \"MKD\"  \"MYS\"  \"ARM\"  \"JPN\"  \"LKA\"  \"CUB\"  \"CMR\"  \"BIH\"  \"MUS\"  \"COM\" \n[101] \"SUR\"  \"UGA\"  \"BGR\"  \"CIV\"  \"JOR\"  \"SYR\"  \"SGP\"  \"BDI\"  \"SAU\"  \"VNM\" \n[111] \"PLW\"  \"QAT\"  \"EGY\"  \"PER\"  \"MLT\"  \"MWI\"  \"ECU\"  \"MDG\"  \"ISL\"  \"UZB\" \n[121] \"NPL\"  \"BHS\"  \"MAC\"  \"TGO\"  \"TWN\"  \"DJI\"  \"STP\"  \"KNA\"  \"ETH\"  \"IRQ\" \n[131] \"HND\"  \"RWA\"  \"KHM\"  \"MCO\"  \"BGD\"  \"IMN\"  \"TJK\"  \"NIC\"  \"BEN\"  \"VGB\" \n[141] \"TZA\"  \"GAB\"  \"GHA\"  \"TMP\"  \"GLP\"  \"KEN\"  \"LIE\"  \"GNB\"  \"MNE\"  \"UMI\" \n[151] \"MYT\"  \"FRO\"  \"MMR\"  \"PAN\"  \"BFA\"  \"LBY\"  \"MLI\"  \"NAM\"  \"BOL\"  \"PRY\" \n[161] \"BRB\"  \"ABW\"  \"AIA\"  \"SLV\"  \"DMA\"  \"PYF\"  \"GUY\"  \"LCA\"  \"ATA\"  \"GTM\" \n[171] \"ASM\"  \"MRT\"  \"NCL\"  \"KIR\"  \"SDN\"  \"ATF\"  \"SLE\"  \"LAO\" \n```\n:::\n\n```{.r .cell-code}\nunique(hotel_bookings_data$distribution_channel)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Direct\"    \"Corporate\" \"TA/TO\"     \"Undefined\" \"GDS\"      \n```\n:::\n:::\n\n## Describe the data\n\nThis dataset gives the information about hotel reservations. It has 11930 rows and 32 columns. Based on the above, we can ionfer that there are 13 columns(variables) are of character datatype and 19 variables are of double datatype. Almost all the columns are readable for the user, except adr(column 28)  which stands for average daily rate. The hotel reservation data is provided for two types of hotels(Resort, City hotels) in various countries(178 countries) in years 2015, 2016 and 2017. Each observation in the dataset provides information of hotel category, reservation of the hotel information like arrival date(date, month, year, week), number of visitors(adult, children), country, number of days staying, meal, previous cancellations, reserved room types, customer type, number of special requests etc. Since every row and column in the dataset correspond to an observation, pivoting is not required.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotel_bookings_data <- mutate(\n  hotel_bookings_data, total_number_of_guests = adults + children + babies, \n  total_days_stay = stays_in_weekend_nights + stays_in_week_nights\n)\n\nprint(summary(hotel_bookings_data, varnumbers= FALSE, \n                plain.ascii= FALSE, \n                style= \"grid\", \n                graph.magnif= 0.80, \n                valid.col= TRUE),\n      method= 'render', \n      table.classes= 'table-condensed')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    hotel            is_canceled       lead_time   arrival_date_year\n Length:119390      Min.   :0.0000   Min.   :  0   Min.   :2015     \n Class :character   1st Qu.:0.0000   1st Qu.: 18   1st Qu.:2016     \n Mode  :character   Median :0.0000   Median : 69   Median :2016     \n                    Mean   :0.3704   Mean   :104   Mean   :2016     \n                    3rd Qu.:1.0000   3rd Qu.:160   3rd Qu.:2017     \n                    Max.   :1.0000   Max.   :737   Max.   :2017     \n                                                                    \n arrival_date_month arrival_date_week_number arrival_date_day_of_month\n Length:119390      Min.   : 1.00            Min.   : 1.0             \n Class :character   1st Qu.:16.00            1st Qu.: 8.0             \n Mode  :character   Median :28.00            Median :16.0             \n                    Mean   :27.17            Mean   :15.8             \n                    3rd Qu.:38.00            3rd Qu.:23.0             \n                    Max.   :53.00            Max.   :31.0             \n                                                                      \n stays_in_weekend_nights stays_in_week_nights     adults      \n Min.   : 0.0000         Min.   : 0.0         Min.   : 0.000  \n 1st Qu.: 0.0000         1st Qu.: 1.0         1st Qu.: 2.000  \n Median : 1.0000         Median : 2.0         Median : 2.000  \n Mean   : 0.9276         Mean   : 2.5         Mean   : 1.856  \n 3rd Qu.: 2.0000         3rd Qu.: 3.0         3rd Qu.: 2.000  \n Max.   :19.0000         Max.   :50.0         Max.   :55.000  \n                                                              \n    children           babies              meal             country         \n Min.   : 0.0000   Min.   : 0.000000   Length:119390      Length:119390     \n 1st Qu.: 0.0000   1st Qu.: 0.000000   Class :character   Class :character  \n Median : 0.0000   Median : 0.000000   Mode  :character   Mode  :character  \n Mean   : 0.1039   Mean   : 0.007949                                        \n 3rd Qu.: 0.0000   3rd Qu.: 0.000000                                        \n Max.   :10.0000   Max.   :10.000000                                        \n NA's   :4                                                                  \n market_segment     distribution_channel is_repeated_guest\n Length:119390      Length:119390        Min.   :0.00000  \n Class :character   Class :character     1st Qu.:0.00000  \n Mode  :character   Mode  :character     Median :0.00000  \n                                         Mean   :0.03191  \n                                         3rd Qu.:0.00000  \n                                         Max.   :1.00000  \n                                                          \n previous_cancellations previous_bookings_not_canceled reserved_room_type\n Min.   : 0.00000       Min.   : 0.0000                Length:119390     \n 1st Qu.: 0.00000       1st Qu.: 0.0000                Class :character  \n Median : 0.00000       Median : 0.0000                Mode  :character  \n Mean   : 0.08712       Mean   : 0.1371                                  \n 3rd Qu.: 0.00000       3rd Qu.: 0.0000                                  \n Max.   :26.00000       Max.   :72.0000                                  \n                                                                         \n assigned_room_type booking_changes   deposit_type          agent          \n Length:119390      Min.   : 0.0000   Length:119390      Length:119390     \n Class :character   1st Qu.: 0.0000   Class :character   Class :character  \n Mode  :character   Median : 0.0000   Mode  :character   Mode  :character  \n                    Mean   : 0.2211                                        \n                    3rd Qu.: 0.0000                                        \n                    Max.   :21.0000                                        \n                                                                           \n   company          days_in_waiting_list customer_type      average_daily_rate\n Length:119390      Min.   :  0.000      Length:119390      Min.   :  -6.38   \n Class :character   1st Qu.:  0.000      Class :character   1st Qu.:  69.29   \n Mode  :character   Median :  0.000      Mode  :character   Median :  94.58   \n                    Mean   :  2.321                         Mean   : 101.83   \n                    3rd Qu.:  0.000                         3rd Qu.: 126.00   \n                    Max.   :391.000                         Max.   :5400.00   \n                                                                              \n required_car_parking_spaces total_of_special_requests reservation_status\n Min.   :0.00000             Min.   :0.0000            Length:119390     \n 1st Qu.:0.00000             1st Qu.:0.0000            Class :character  \n Median :0.00000             Median :0.0000            Mode  :character  \n Mean   :0.06252             Mean   :0.5714                              \n 3rd Qu.:0.00000             3rd Qu.:1.0000                              \n Max.   :8.00000             Max.   :5.0000                              \n                                                                         \n reservation_status_date total_number_of_guests total_days_stay \n Min.   :2014-10-17      Min.   : 0.000         Min.   : 0.000  \n 1st Qu.:2016-02-01      1st Qu.: 2.000         1st Qu.: 2.000  \n Median :2016-08-07      Median : 2.000         Median : 3.000  \n Mean   :2016-07-30      Mean   : 1.968         Mean   : 3.428  \n 3rd Qu.:2017-02-08      3rd Qu.: 2.000         3rd Qu.: 4.000  \n Max.   :2017-09-14      Max.   :55.000         Max.   :69.000  \n                         NA's   :4                              \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Filter country Code = 'PRT' from the dataset \nfilter(hotel_bookings_data, `country` == \"PRT\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 48,590 × 34\n   hotel  is_ca…¹ lead_…² arriv…³ arriv…⁴ arriv…⁵ arriv…⁶ stays…⁷ stays…⁸ adults\n   <chr>    <dbl>   <dbl>   <dbl> <chr>     <dbl>   <dbl>   <dbl>   <dbl>  <dbl>\n 1 Resor…       0     342    2015 July         27       1       0       0      2\n 2 Resor…       0     737    2015 July         27       1       0       0      2\n 3 Resor…       0       0    2015 July         27       1       0       2      2\n 4 Resor…       0       9    2015 July         27       1       0       2      2\n 5 Resor…       1      85    2015 July         27       1       0       3      2\n 6 Resor…       1      75    2015 July         27       1       0       3      2\n 7 Resor…       1      23    2015 July         27       1       0       4      2\n 8 Resor…       0      35    2015 July         27       1       0       4      2\n 9 Resor…       0      37    2015 July         27       1       0       4      2\n10 Resor…       0      37    2015 July         27       1       0       4      2\n# … with 48,580 more rows, 24 more variables: children <dbl>, babies <dbl>,\n#   meal <chr>, country <chr>, market_segment <chr>,\n#   distribution_channel <chr>, is_repeated_guest <dbl>,\n#   previous_cancellations <dbl>, previous_bookings_not_canceled <dbl>,\n#   reserved_room_type <chr>, assigned_room_type <chr>, booking_changes <dbl>,\n#   deposit_type <chr>, agent <chr>, company <chr>, days_in_waiting_list <dbl>,\n#   customer_type <chr>, average_daily_rate <dbl>, …\n```\n:::\n\n```{.r .cell-code}\n#Filter the rows that has country as \"PRT\" and is not a repeated_guest\nfilter(hotel_bookings_data, `country` == \"PRT\" & `is_repeated_guest` == 0)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 45,340 × 34\n   hotel  is_ca…¹ lead_…² arriv…³ arriv…⁴ arriv…⁵ arriv…⁶ stays…⁷ stays…⁸ adults\n   <chr>    <dbl>   <dbl>   <dbl> <chr>     <dbl>   <dbl>   <dbl>   <dbl>  <dbl>\n 1 Resor…       0     342    2015 July         27       1       0       0      2\n 2 Resor…       0     737    2015 July         27       1       0       0      2\n 3 Resor…       0       0    2015 July         27       1       0       2      2\n 4 Resor…       0       9    2015 July         27       1       0       2      2\n 5 Resor…       1      85    2015 July         27       1       0       3      2\n 6 Resor…       1      75    2015 July         27       1       0       3      2\n 7 Resor…       1      23    2015 July         27       1       0       4      2\n 8 Resor…       0      35    2015 July         27       1       0       4      2\n 9 Resor…       0      37    2015 July         27       1       0       4      2\n10 Resor…       0      37    2015 July         27       1       0       4      2\n# … with 45,330 more rows, 24 more variables: children <dbl>, babies <dbl>,\n#   meal <chr>, country <chr>, market_segment <chr>,\n#   distribution_channel <chr>, is_repeated_guest <dbl>,\n#   previous_cancellations <dbl>, previous_bookings_not_canceled <dbl>,\n#   reserved_room_type <chr>, assigned_room_type <chr>, booking_changes <dbl>,\n#   deposit_type <chr>, agent <chr>, company <chr>, days_in_waiting_list <dbl>,\n#   customer_type <chr>, average_daily_rate <dbl>, …\n```\n:::\n\n```{.r .cell-code}\n#Arranging data based on average_daily_rate and selecting hotel, country, average_daily_rate columns, grouping them based on country and then slicing out first 10 rows (with piping)\nhotel_bookings_data %>%\n  arrange(desc(average_daily_rate)) %>%\n  select(hotel, country, average_daily_rate)%>%\n  group_by(country) %>%\n  slice(1:10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,220 × 3\n# Groups:   country [178]\n   hotel        country average_daily_rate\n   <chr>        <chr>                <dbl>\n 1 City Hotel   ABW                   158.\n 2 City Hotel   ABW                    99 \n 3 City Hotel   AGO                   305 \n 4 City Hotel   AGO                   291.\n 5 City Hotel   AGO                   274.\n 6 City Hotel   AGO                   266.\n 7 City Hotel   AGO                   266.\n 8 Resort Hotel AGO                   255.\n 9 Resort Hotel AGO                   255.\n10 City Hotel   AGO                   252.\n# … with 1,210 more rows\n```\n:::\n:::\n\n\n## Grouped Summary Statistics\n\nThe above table shows descriptive statistics for the numeric variables present in the data. Based on the summary statistics, typically the reservations are made 104 days before the anticipated arrival date and 37% of the reservations are cancelled in reality. The length of the stay is typically 3.43 days and 1.97 guests are reserved for every reservation. 22.11% of the reservations are modified after they are made. The average daily rate for the hotels is $101.83. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotel_bookings_data %>% \n  arrange(desc(average_daily_rate)) %>% \n  slice_head(n=10) %>% \n  select(hotel, \n         arrival_date_year, \n         country, \n         agent, \n         total_number_of_guests, \n         total_days_stay, \n         reservation_status, \n         average_daily_rate)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 8\n   hotel        arrival_date_year country agent total_…¹ total…² reser…³ avera…⁴\n   <chr>                    <dbl> <chr>   <chr>    <dbl>   <dbl> <chr>     <dbl>\n 1 City Hotel                2016 PRT     12           2       1 Cancel…   5400 \n 2 City Hotel                2017 ITA     159          1       1 Check-…    510 \n 3 Resort Hotel              2015 PRT     NULL         2       1 Check-…    508 \n 4 City Hotel                2016 PRT     NULL         4       2 Check-…    452.\n 5 Resort Hotel              2017 PRT     314          2      14 Cancel…    450 \n 6 Resort Hotel              2017 PRT     250          4       6 Cancel…    437 \n 7 Resort Hotel              2017 PRT     250          4       8 Check-…    426.\n 8 Resort Hotel              2017 ESP     240          4       5 Check-…    402 \n 9 Resort Hotel              2017 MAR     250          5       8 Check-…    397.\n10 Resort Hotel              2017 PRT     250          3      10 Cancel…    392 \n# … with abbreviated variable names ¹​total_number_of_guests, ²​total_days_stay,\n#   ³​reservation_status, ⁴​average_daily_rate\n```\n:::\n:::\n\n\nAccording to the summary table, the daily fee for a city hotel might reach upto $5400 per night while it costs only $508 per night for a resort. This might be beguine but let's perform some analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotel_bookings_data %>% \n  arrange(average_daily_rate) %>% \n  slice_head(n=10) %>% \n  select(hotel, arrival_date_year, \n         country, \n         agent, \n         total_number_of_guests, \n         total_days_stay, \n         reservation_status, \n         average_daily_rate)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 8\n   hotel        arrival_date_year country agent total_…¹ total…² reser…³ avera…⁴\n   <chr>                    <dbl> <chr>   <chr>    <dbl>   <dbl> <chr>     <dbl>\n 1 Resort Hotel              2017 GBR     273          2      10 Check-…   -6.38\n 2 Resort Hotel              2015 PRT     NULL         2       0 Check-…    0   \n 3 Resort Hotel              2015 PRT     NULL         2       0 Check-…    0   \n 4 Resort Hotel              2015 PRT     NULL         4       1 Check-…    0   \n 5 Resort Hotel              2015 PRT     240          2       0 Check-…    0   \n 6 Resort Hotel              2015 PRT     250          1       0 Check-…    0   \n 7 Resort Hotel              2015 PRT     NULL         2       0 Check-…    0   \n 8 Resort Hotel              2015 PRT     240          2       0 Check-…    0   \n 9 Resort Hotel              2015 PRT     305          2       2 Cancel…    0   \n10 Resort Hotel              2015 PRT     305          1       2 Check-…    0   \n# … with abbreviated variable names ¹​total_number_of_guests, ²​total_days_stay,\n#   ³​reservation_status, ⁴​average_daily_rate\n```\n:::\n:::\n\n\nIf we observe the above table, the average daily rate for a city hotel is recorded as -6.38 which is incorrect. So, the row with average daily rate $5400 is an error. I will remove both observations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# filtering the observations for average daily rate > 0 and < 510\nhotel_bookings_data <- hotel_bookings_data %>% filter(average_daily_rate>=0 & average_daily_rate<=510)\n\n#Using group_by and summarise to understand the data of average daily rate for different types of hotels.\nhotel_bookings_data %>% \n  select(hotel, average_daily_rate) %>% \n  group_by(hotel) %>% \n  summarise_if(is.numeric, list(min = min, max = max, mean = mean, std_dev = sd, median = median), na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 6\n  hotel          min   max  mean std_dev median\n  <chr>        <dbl> <dbl> <dbl>   <dbl>  <dbl>\n1 City Hotel       0   510 105.     39.3   99.9\n2 Resort Hotel     0   508  95.0    61.4   75  \n```\n:::\n:::\n\n\nBased on the above statistics, we can say that mean average daily rate is more for city hotel than a resort hotel and standard deviation is less for a city hotel than a resort hotel.\n\n::: {.cell}\n\n```{.r .cell-code}\nhotel_bookings_data %>% \n  filter(reservation_status == \"Check-Out\") %>% \n  select(country, total_number_of_guests) %>% \n  group_by(country) %>% \n  summarise_if(is.numeric, sum, na.rm = TRUE) %>% \n  arrange(desc(total_number_of_guests)) %>% \n  head(n=10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 2\n   country total_number_of_guests\n   <chr>                    <dbl>\n 1 PRT                      37670\n 2 GBR                      19256\n 3 FRA                      17299\n 4 ESP                      13213\n 5 DEU                      11659\n 6 IRL                       5102\n 7 ITA                       4894\n 8 BEL                       3855\n 9 NLD                       3374\n10 USA                       3212\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhotel_bookings_data %>% \n  filter(country %in% c(\"PRT\", \"GBR\", \"ESP\", \"FRA\", \"ITA\")) %>% \n  select(country,is_canceled) %>% \n  group_by(country) %>% \n  summarise_if(is.numeric, mean, na.rm = TRUE) %>% \n  arrange(desc(is_canceled))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 2\n  country is_canceled\n  <chr>         <dbl>\n1 PRT           0.566\n2 ITA           0.354\n3 ESP           0.254\n4 GBR           0.202\n5 FRA           0.186\n```\n:::\n:::\n\n\nBased on the above tables,Portugal, Great Britain, France, Spain, Germany, Italy, Ireland, Belgium,Netherlands and the USA are top the list of countries with the most reservations. But we can also see that 56.63% of the reservations are cancelled in Portugal. Italy and Spain has 35.39% and 25.4% cancellations respectively. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotel_bookings_data %>% \n  select(country, average_daily_rate) %>% \n  group_by(country) %>% \n  summarise_if(is.numeric, mean, na.rm = TRUE) %>% \n  arrange(desc(average_daily_rate)) %>% \n  head(n=10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 2\n   country average_daily_rate\n   <chr>                <dbl>\n 1 DJI                   273 \n 2 AIA                   265 \n 3 AND                   203.\n 4 UMI                   200 \n 5 LAO                   182.\n 6 MYT                   178.\n 7 NCL                   176.\n 8 GEO                   169.\n 9 COM                   165.\n10 FRO                   155.\n```\n:::\n:::\n\n\nThe above table gives the list of top 10 most expensive hotels(based on the average daily rate, grouped based on the country). Most expensive hotels are found in Djibouti, Anguilla, Andorra, United States Minor Outlying Islands, and so on which implies that hotels in small countries with less visitors are more expensive. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Verifying if any observations are made with zero average daily rate and counting the total observations\n\nhotel_bookings_data %>% \n  filter(average_daily_rate == 0) %>% \n  count()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n      n\n  <int>\n1  1959\n```\n:::\n\n```{.r .cell-code}\n# Identifying the observations that has c and grouping them based on the country \nhotel_bookings_data %>% \n  filter(average_daily_rate == 0) %>% \n  group_by(country) %>% \n  count() %>% \n  arrange(desc(n)) %>% \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 2\n# Groups:   country [6]\n  country     n\n  <chr>   <int>\n1 PRT      1550\n2 ESP        79\n3 GBR        73\n4 FRA        55\n5 DEU        41\n6 NULL       21\n```\n:::\n:::\n\n\nBased on the above table, there are 1959 observations with average daily rate as 0. Portugal has 1550 observations with average daily rate as zero, followed by Spain, Great Britain. Since Portugal has more observation with average daily rate as zero we need to investigate more about that. \n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}