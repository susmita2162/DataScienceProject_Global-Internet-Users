{
  "hash": "61fb278e1387522aadcc72d9cc916dea",
  "result": {
    "markdown": "---\ntitle: \"Challenge 8 Instructions\"\nauthor: \"Susmita Madineni\"\ndescription: \"Joining Data\"\ndate: \"08/25/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_8\n  - railroads\n  - snl\n  - faostat\n  - debt\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in multiple data sets, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  join two or more data sets and analyze some aspect of the joined data\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nfaostat_country_data <- read_csv(\"_data/FAOSTAT_country_groups.csv\")\nfaostat_cattle_data <- read_csv(\"_data/FAOSTAT_cattle_dairy.csv\")\nView(faostat_country_data)\nView(faostat_cattle_data)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Preview the first few rows of the dataset\nhead(faostat_country_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 7\n  `Country Group Code` `Country Group` Country…¹ Country M49 C…² ISO2 …³ ISO3 …⁴\n                 <dbl> <chr>               <dbl> <chr>   <chr>   <chr>   <chr>  \n1                 5100 Africa                  4 Algeria 012     DZ      DZA    \n2                 5100 Africa                  7 Angola  024     AO      AGO    \n3                 5100 Africa                 53 Benin   204     BJ      BEN    \n4                 5100 Africa                 20 Botswa… 072     BW      BWA    \n5                 5100 Africa                233 Burkin… 854     BF      BFA    \n6                 5100 Africa                 29 Burundi 108     BI      BDI    \n# … with abbreviated variable names ¹​`Country Code`, ²​`M49 Code`, ³​`ISO2 Code`,\n#   ⁴​`ISO3 Code`\n```\n:::\n\n```{.r .cell-code}\nhead(faostat_cattle_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 14\n  Domai…¹ Domain Area …² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year Unit \n  <chr>   <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl> <chr>\n1 QL      Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961 Head \n2 QL      Lives…       2 Afgh…    5420 Yield       882 Milk…    1961  1961 hg/An\n3 QL      Lives…       2 Afgh…    5510 Produc…     882 Milk…    1961  1961 tonn…\n4 QL      Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1962  1962 Head \n5 QL      Lives…       2 Afgh…    5420 Yield       882 Milk…    1962  1962 hg/An\n6 QL      Lives…       2 Afgh…    5510 Produc…     882 Milk…    1962  1962 tonn…\n# … with 3 more variables: Value <dbl>, Flag <chr>, `Flag Description` <chr>,\n#   and abbreviated variable names ¹​`Domain Code`, ²​`Area Code`,\n#   ³​`Element Code`, ⁴​`Item Code`, ⁵​`Year Code`\n```\n:::\n\n```{.r .cell-code}\n# Understanding the dimensions of the dataset \ndim(faostat_country_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1943    7\n```\n:::\n\n```{.r .cell-code}\ndim(faostat_cattle_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 36449    14\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Identifying the column names of the dataset \ncolnames(faostat_country_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Country Group Code\" \"Country Group\"      \"Country Code\"      \n[4] \"Country\"            \"M49 Code\"           \"ISO2 Code\"         \n[7] \"ISO3 Code\"         \n```\n:::\n\n```{.r .cell-code}\ncolnames(faostat_cattle_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Domain Code\"      \"Domain\"           \"Area Code\"        \"Area\"            \n [5] \"Element Code\"     \"Element\"          \"Item Code\"        \"Item\"            \n [9] \"Year Code\"        \"Year\"             \"Unit\"             \"Value\"           \n[13] \"Flag\"             \"Flag Description\"\n```\n:::\n\n```{.r .cell-code}\n# Identifying the data types of the columns\nsapply(faostat_country_data, class)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCountry Group Code      Country Group       Country Code            Country \n         \"numeric\"        \"character\"          \"numeric\"        \"character\" \n          M49 Code          ISO2 Code          ISO3 Code \n       \"character\"        \"character\"        \"character\" \n```\n:::\n\n```{.r .cell-code}\ntable(sapply(faostat_country_data, function(x) typeof(x)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\ncharacter    double \n        5         2 \n```\n:::\n\n```{.r .cell-code}\nsapply(faostat_cattle_data, class)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Domain Code           Domain        Area Code             Area \n     \"character\"      \"character\"        \"numeric\"      \"character\" \n    Element Code          Element        Item Code             Item \n       \"numeric\"      \"character\"        \"numeric\"      \"character\" \n       Year Code             Year             Unit            Value \n       \"numeric\"        \"numeric\"      \"character\"        \"numeric\" \n            Flag Flag Description \n     \"character\"      \"character\" \n```\n:::\n\n```{.r .cell-code}\ntable(sapply(faostat_cattle_data, function(x) typeof(x)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\ncharacter    double \n        8         6 \n```\n:::\n:::\n\n\n\n### Briefly describe the data\n\nI chose FAOSTAT_country_groups.csv and FAOSTAT_cattle_dairy.csv datasets. In the first dataset, the codes for each country is present. In second dataset, the livestock data in different countries, along with the values of different elements from 1961 to 2018 is present. First dataset has 1943 rows and 7 columns out of which there are 5 character types and 2 double datatypes. In the second dataset, there are 36449 rows and 14 columns out of which there are 8 characters and 6 double datatypes. I will use the country code in first dataset and area code in the second dataset to join the two datasets and perform analysis.\n\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# renaming the column value area code in cattle_diary dataset\n\nfaostat_cattle_data_new <- faostat_cattle_data %>%\n  rename(\"Country Code\"= \"Area Code\")\n\nhead(faostat_cattle_data_new)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 14\n  Domai…¹ Domain Count…² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year Unit \n  <chr>   <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl> <chr>\n1 QL      Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961 Head \n2 QL      Lives…       2 Afgh…    5420 Yield       882 Milk…    1961  1961 hg/An\n3 QL      Lives…       2 Afgh…    5510 Produc…     882 Milk…    1961  1961 tonn…\n4 QL      Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1962  1962 Head \n5 QL      Lives…       2 Afgh…    5420 Yield       882 Milk…    1962  1962 hg/An\n6 QL      Lives…       2 Afgh…    5510 Produc…     882 Milk…    1962  1962 tonn…\n# … with 3 more variables: Value <dbl>, Flag <chr>, `Flag Description` <chr>,\n#   and abbreviated variable names ¹​`Domain Code`, ²​`Country Code`,\n#   ³​`Element Code`, ⁴​`Item Code`, ⁵​`Year Code`\n```\n:::\n:::\n\n\n## Join Data\n\nLike I have mentioned previously, I will use Country Code column to join both the datasets.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_join <- faostat_cattle_data_new %>% \n  left_join(faostat_country_data, by = \"Country Code\")\n\ndf_join\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 257,061 × 20\n   Domain Cod…¹ Domain Count…² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year\n   <chr>        <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl>\n 1 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961\n 2 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961\n 3 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961\n 4 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961\n 5 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961\n 6 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961\n 7 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961\n 8 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961\n 9 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961\n10 QL           Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961\n# … with 257,051 more rows, 10 more variables: Unit <chr>, Value <dbl>,\n#   Flag <chr>, `Flag Description` <chr>, `Country Group Code` <dbl>,\n#   `Country Group` <chr>, Country <chr>, `M49 Code` <chr>, `ISO2 Code` <chr>,\n#   `ISO3 Code` <chr>, and abbreviated variable names ¹​`Domain Code`,\n#   ²​`Country Code`, ³​`Element Code`, ⁴​`Item Code`, ⁵​`Year Code`\n```\n:::\n:::\n\nNow, using the above dataframe, we will be able to perform analysis like analyzing the value of milk in different years across different years(from 1981 to 2018) among different country groups.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_join %>% filter(Year >= 1981) %>%\n  filter(`Country Group` == \"Asia\") %>%\n  filter(Flag == \"F\") %>%\n  filter(Unit == \"tonnes\") %>%\n  ggplot(aes(x = `Area`, y = `Value`))+ geom_point()+ coord_flip(expand = FALSE)+ labs(title = \"Official quantity of milk produced in Asia from 1981 to 2018\", y = \"Price of Milk\", x = \"Location\")\n```\n\n::: {.cell-output-display}\n![](SusmitaMadineni_challenge8_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_join %>% filter(Year >= 2000) %>%\n  filter(`Country Group` == \"Central Asia\") %>%\n  filter(Flag == \"F\") %>%\n  filter(Unit == \"tonnes\") %>%\n  ggplot(aes(x = `Area`, y = `Value`))+ geom_point()+ labs(title = \"Official quantity of milk produced in Central Asia from 2000 to 2018\", y = \"Price of Milk\", x = \"Location\")\n```\n\n::: {.cell-output-display}\n![](SusmitaMadineni_challenge8_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "SusmitaMadineni_challenge8_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}