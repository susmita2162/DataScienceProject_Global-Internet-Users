{
  "hash": "101ebea1d06ae23bab35eb11214c6af8",
  "result": {
    "markdown": "---\ntitle: \"Pivoting dataset using pivot_longer: eggs_tidy.csv\"\nauthor: \"Susmita Madineni\"\ndescription: \"Tidy Data: Pivoting\"\ndate: \"03/16/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - eggs\n  - readr\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2.  identify what needs to be done to tidy the current data\n3.  anticipate the shape of pivoted data\n4.  pivot the data into tidy format using `pivot_longer`\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   animal_weights.csv ‚≠ê\n-   eggs_tidy.csv ‚≠ê‚≠ê or organiceggpoultry.xls ‚≠ê‚≠ê‚≠ê\n-   australian_marriage\\*.xls ‚≠ê‚≠ê‚≠ê\n-   USA Households\\*.xlsx ‚≠ê‚≠ê‚≠ê‚≠ê\n-   sce_labor_chart_data_public.xlsx üåüüåüüåüüåüüåü\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Reading eggs_tidy.csv dataset\n\nlibrary(readr)\neggs_tidy_data <- read_csv(\"_data/eggs_tidy.csv\")\nview(eggs_tidy_data)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Preview the first few rows of the dataset\nhead(eggs_tidy_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 √ó 6\n  month     year large_half_dozen large_dozen extra_large_half_dozen extra_lar‚Ä¶¬π\n  <chr>    <dbl>            <dbl>       <dbl>                  <dbl>       <dbl>\n1 January   2004             126         230                    132         230 \n2 February  2004             128.        226.                   134.        230 \n3 March     2004             131         225                    137         230 \n4 April     2004             131         225                    137         234.\n5 May       2004             131         225                    137         236 \n6 June      2004             134.        231.                   137         241 \n# ‚Ä¶ with abbreviated variable name ¬π‚Äãextra_large_dozen\n```\n:::\n\n```{.r .cell-code}\n# Understanding the dimensions of the dataset \ndim(eggs_tidy_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 120   6\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Identifying the column names of the dataset \ncolnames(eggs_tidy_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"month\"                  \"year\"                   \"large_half_dozen\"      \n[4] \"large_dozen\"            \"extra_large_half_dozen\" \"extra_large_dozen\"     \n```\n:::\n\n```{.r .cell-code}\n# Identifying the data types of the columns\ntable(sapply(eggs_tidy_data, function(x) typeof(x)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\ncharacter    double \n        1         5 \n```\n:::\n\n```{.r .cell-code}\n# Summary of the dataset\nsummary(eggs_tidy_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    month                year      large_half_dozen  large_dozen   \n Length:120         Min.   :2004   Min.   :126.0    Min.   :225.0  \n Class :character   1st Qu.:2006   1st Qu.:129.4    1st Qu.:233.5  \n Mode  :character   Median :2008   Median :174.5    Median :267.5  \n                    Mean   :2008   Mean   :155.2    Mean   :254.2  \n                    3rd Qu.:2011   3rd Qu.:174.5    3rd Qu.:268.0  \n                    Max.   :2013   Max.   :178.0    Max.   :277.5  \n extra_large_half_dozen extra_large_dozen\n Min.   :132.0          Min.   :230.0    \n 1st Qu.:135.8          1st Qu.:241.5    \n Median :185.5          Median :285.5    \n Mean   :164.2          Mean   :266.8    \n 3rd Qu.:185.5          3rd Qu.:285.5    \n Max.   :188.1          Max.   :290.0    \n```\n:::\n:::\n\n\n\n\n### Briefly describe the data\n\n\nThis dataset gives the information about prices of different quantities and sizes of eggs in every month from the year 2004 to 2013.. It has 120 rows and 6 columns. Based on the above, we can infer that there are 1 column(variables) is of character datatype and 5 variables are of double datatype. All the columns are readable for the user. Each observation in the dataset is providing information about - month, year, prices of different quantities and sizes of eggs in a particular month and year. Based on the summary, we can say that average price for large_half_dozen is around 155.2, for large_dozen is around 254.2, for extra_large_half_dozen is 164.2 and extra_large_dozen is around 266.8. The dataset is put together in a way that size, quantity and respective price of the eggs are included in the same column. I want to pivot the data longer to make it more readable for analysis. I want to make different columns for size and quantity and mark the price for that month, year, size and quantity respectively. \n\n\n## Anticipate the End Result\n\nThe first step in pivoting the data is to try to come up with a concrete vision of what the end product *should* look like - that way you will know whether or not your pivoting was successful.\n\nOne easy way to do this is to think about the dimensions of your current data (tibble, dataframe, or matrix), and then calculate what the dimensions of the pivoted data should be.\n\nSuppose you have a dataset with $n$ rows and $k$ variables. In our example, 3 of the variables are used to identify a case, so you will be pivoting $k-3$ variables into a longer format where the $k-3$ variable names will move into the `names_to` variable and the current values in each of those columns will move into the `values_to` variable. Therefore, we would expect $n * (k-3)$ rows in the pivoted dataframe!\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#existing rows/cases in the dataset\nnrow(eggs_tidy_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 120\n```\n:::\n\n```{.r .cell-code}\n#existing columns in the dataset\nncol(eggs_tidy_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6\n```\n:::\n\n```{.r .cell-code}\n#expected rows/cases in the dataset\nnrow(eggs_tidy_data) * (ncol(eggs_tidy_data)-2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 480\n```\n:::\n\n```{.r .cell-code}\n# expected columns in the dataset\n3 + 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n:::\n\n### Challenge: Describe the final dimensions\n\nFrom the above, we can say that the dataset has 120 rows(observations) and 6 columns in the dataset. After pivoting the dataset, I expect 480 rows/observations in the dataset with 5 columns. After pivoting, the observation will contain month, year, size, quantity and price of the eggs columns. With this we will be easily able to analyze the data. We can understand how the prices of different types, quantities of the eggs across different months, years are changing.\n\n\n\n::: {.cell}\n\n:::\n\n\n### Challenge: Pivot the Chosen Data\n\nDocument your work here. What will a new \"case\" be once you have pivoted the data? How does it meet requirements for tidy data?\n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs_pivot_data<-pivot_longer(eggs_tidy_data, cols = contains(\"dozen\"),\n                              names_to= c(\"size\", \"quantity\"),\n                              names_sep = \"_\",\n                              values_to = \"price\")\nView(eggs_pivot_data)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Preview the first few rows of the pivoted dataset\nhead(eggs_pivot_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 √ó 5\n  month     year size  quantity price\n  <chr>    <dbl> <chr> <chr>    <dbl>\n1 January   2004 large half      126 \n2 January   2004 large dozen     230 \n3 January   2004 extra large     132 \n4 January   2004 extra large     230 \n5 February  2004 large half      128.\n6 February  2004 large dozen     226.\n```\n:::\n\n```{.r .cell-code}\n# number of rows/cases in the pivot dataset\nnrow(eggs_pivot_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 480\n```\n:::\n\n```{.r .cell-code}\n# number of columns in the pivot dataset\nncol(eggs_pivot_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n:::\n\n\nAs expected, we can observe that the pivoted dataset has 480 observations with 5 columns(month, year, size, quantity and price of the eggs). This helps us to easily analyze the data. We can mutate the price of the eggs(from cents to USD).\n\n::: {.cell}\n\n```{.r .cell-code}\n# Mutating the price of the eggs\neggs_price_mutated <-mutate(eggs_pivot_data, price_USD = price/100)%>%\n  select(!contains(\"cost\"))\n\nView(eggs_price_mutated)\n\n# Identifying the column names of the dataset \ncolnames(eggs_price_mutated)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"month\"     \"year\"      \"size\"      \"quantity\"  \"price\"     \"price_USD\"\n```\n:::\n\n```{.r .cell-code}\n# Identifying the data types of the columns\ntable(sapply(eggs_price_mutated, function(x) typeof(x)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\ncharacter    double \n        3         3 \n```\n:::\n:::\n\nThe mutated data has an additional column price in USD for every observation. There are 3 character datatypes(month, size, quantity) columns and 3 columns are of double datatype(year, price, price_USD).\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}